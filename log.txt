import logging

# 配置全局日志记录器属性
logging.basicConfig(filename='example.log', level=logging.DEBUG,
                    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    datefmt='%Y/%m/%d %H:%M:%S')

# 创建一个 logger 对象
logger = logging.getLogger('my_logger')
logger.setLevel(logging.DEBUG)

# 给 logger 添加处理程序 ConsoleHandler，将日志消息输出到控制台
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
logger.addHandler(ch)

# 记录不同级别的日志消息
logger.debug('This is a debug message')
# logger.info('This is an info message')
# logger.warning('This is a warning message')
# logger.error('This is an error message')
# logger.critical('This is a critical message')



import logging

# 配置日志基本设置
logging.basicConfig(level=logging.DEBUG,  # 控制台打印的日志级别
                    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',  # 日志格式
                    datefmt='%Y-%m-%d %H:%M:%S',  # 日期格式
                    handlers=[logging.StreamHandler()])  # 输出到控制台

# 创建logger
logger = logging.getLogger(__name__)

# 使用logger打印不同级别的日志
logger.debug('这是一个debug级别的日志')